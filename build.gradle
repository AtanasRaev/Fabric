plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'bg.tshirt'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0'
    implementation 'com.cloudinary:cloudinary-http44:1.31.0'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.47'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.6'
    implementation 'com.mailjet:mailjet-client:5.2.5'
    implementation 'commons-net:commons-net:3.9.0'
    implementation 'org.sejda.imageio:webp-imageio:0.1.6'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.5'
    testImplementation 'org.springframework.security:spring-security-test:6.1.5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testImplementation 'org.testcontainers:postgresql:1.18.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
}

configurations.configureEach {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.junit.platform' && details.requested.name == 'junit-platform-commons') {
            details.useVersion '1.10.0'
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
